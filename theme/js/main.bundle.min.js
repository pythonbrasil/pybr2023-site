/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ 925:
/***/ (() => {

function onKonamiCode() {
  window.location.href = '/theme/egg/game.html';
}
function onKonamiCodeGesture(event) {
  console.log(event.detail.name);
}
document.addEventListener("konamiCode", onKonamiCode);
document.addEventListener("konamiCodeGesture", onKonamiCodeGesture);

/***/ }),

/***/ 778:
/***/ (() => {

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
var canvas = document.getElementById('game');
if (canvas) {
  //Game Over function
  var isGameOver = function isGameOver() {
    var gameOver = false;
    //check whether game has started
    if (yvelocity === 0 && xvelocity === 0) {
      return false;
    }
    if (headX < 0) {
      //if snake hits left wall
      gameOver = true;
    } else if (headX === tileCount) {
      //if snake hits right wall
      gameOver = true;
    } else if (headY < 0) {
      //if snake hits wall at the top
      gameOver = true;
    } else if (headY === tileCount) {
      //if snake hits wall at the bottom
      gameOver = true;
    }

    //stop game when snake crush to its own body

    for (var i = 0; i < snakeParts.length; i++) {
      var part = snakeParts[i];
      if (part.x === headX && part.y === headY) {
        //check whether any part of snake is occupying the same space
        gameOver = true;
        break; // to break out of for loop
      }
    }

    //display text Game Over
    if (gameOver) {
      ctx.fillStyle = "white";
      ctx.font = "50px sans-serif";
      ctx.fillText("Game Over! ", canvas.clientWidth / 6.5, canvas.clientHeight / 2); //position our text in center
    }

    return gameOver; // this will stop execution of drawgame method
  }; // score function
  var drawScore = function drawScore() {
    ctx.fillStyle = "white"; // set our text color to white
    ctx.font = "10px sans-serif"; //set font size to 10px of font family verdena
    ctx.fillText("Score: " + score, canvas.clientWidth - 50, 10); // position our score at right hand corner 
  }; // clear our screen
  var clearScreen = function clearScreen() {
    ctx.fillStyle = 'black'; // make screen black
    ctx.fillRect(0, 0, canvas.clientWidth, canvas.clientHeight); // black color start from 0px left, right to canvas width and canvas height
  };
  var drawSnake = function drawSnake() {
    ctx.fillStyle = "#4b8cbf";
    //loop through our snakeparts array
    for (var i = 0; i < snakeParts.length; i++) {
      //draw snake parts
      var part = snakeParts[i];
      ctx.fillRect(part.x * tileCount, part.y * tileCount, tileSize, tileSize);
    }
    //add parts to snake --through push
    snakeParts.push(new snakePart(headX, headY)); //put item at the end of list next to the head
    if (snakeParts.length > tailLength) {
      snakeParts.shift(); //remove furthest item from  snake part if we have more than our tail size
    }

    ctx.fillStyle = "#ffd43b";
    ctx.fillRect(headX * tileCount, headY * tileCount, tileSize, tileSize);
  };
  var changeSnakePosition = function changeSnakePosition() {
    headX = headX + xvelocity;
    headY = headY + yvelocity;
  };
  var drawApple = function drawApple() {
    ctx.fillStyle = "red";
    ctx.fillRect(appleX * tileCount, appleY * tileCount, tileSize, tileSize);
  }; // check for collision and change apple position
  var checkCollision = function checkCollision() {
    if (appleX == headX && appleY == headY) {
      appleX = Math.floor(Math.random() * tileCount);
      appleY = Math.floor(Math.random() * tileCount);
      tailLength++;
      score++; //increase our score value
    }
  };
  var keyDown = function keyDown(event) {
    if (event.keyCode == 38) {
      //prevent snake from moving in opposite direcction
      if (yvelocity == 1) return;
      yvelocity = -1;
      xvelocity = 0;
    }
    //down
    if (event.keyCode == 40) {
      if (yvelocity == -1) return;
      yvelocity = 1;
      xvelocity = 0;
    }

    //left
    if (event.keyCode == 37) {
      if (xvelocity == 1) return;
      yvelocity = 0;
      xvelocity = -1;
    }
    //right
    if (event.keyCode == 39) {
      if (xvelocity == -1) return;
      yvelocity = 0;
      xvelocity = 1;
    }
  }; // create game loop-to continously update screen
  var drawGame = function drawGame() {
    changeSnakePosition();
    // game over logic
    var result = isGameOver();
    if (result) {
      // if result is true
      return;
    }
    clearScreen();
    drawSnake();
    drawApple();
    checkCollision();
    drawScore();
    setTimeout(drawGame, 1000 / speed); //update screen 7 times a second
  };
  var ctx = canvas.getContext('2d');
  var snakePart = /*#__PURE__*/_createClass(function snakePart(x, y) {
    _classCallCheck(this, snakePart);
    this.x = x;
    this.y = y;
  });
  var speed = 7;
  var tileCount = 20;
  var tileSize = canvas.clientWidth / tileCount - 2;
  var headX = 10;
  var headY = 10;

  // array for snake parts
  var snakeParts = [];
  var tailLength = 2;

  //initialize the speed of snake
  var xvelocity = 0;
  var yvelocity = 0;

  //draw apple
  var appleX = 5;
  var appleY = 5;

  //scores
  var score = 0;
  document.body.addEventListener('keydown', keyDown);
  drawGame();
}

/***/ }),

/***/ 748:
/***/ (() => {

if (document.getElementById("hamburger-menu") && document.getElementById("navbarNav")) {
  var hamburgerMenu = document.getElementById("hamburger-menu");
  var menuItemsContainer = document.getElementById("navbarNav");
  hamburgerMenu.onclick = function () {
    hamburgerMenu.classList.toggle("menu-open");
    menuItemsContainer.classList.toggle("menu-open");
  };
}

/***/ }),

/***/ 476:
/***/ (() => {

!function (e) {
  function t(u) {
    if (n[u]) return n[u].exports;
    var o = n[u] = {
      i: u,
      l: !1,
      exports: {}
    };
    return e[u].call(o.exports, o, o.exports, t), o.l = !0, o.exports;
  }
  var n = {};
  t.m = e, t.c = n, t.d = function (e, n, u) {
    t.o(e, n) || Object.defineProperty(e, n, {
      configurable: !1,
      enumerable: !0,
      get: u
    });
  }, t.n = function (e) {
    var n = e && e.__esModule ? function () {
      return e["default"];
    } : function () {
      return e;
    };
    return t.d(n, "a", n), n;
  }, t.o = function (e, t) {
    return Object.prototype.hasOwnProperty.call(e, t);
  }, t.p = "", t(t.s = 1);
}([function (e, t, n) {
  "use strict";

  Object.defineProperty(t, "__esModule", {
    value: !0
  });
  var u = {
    Up: 1,
    Down: 2,
    Left: 3,
    Right: 4,
    A: 5,
    B: 6,
    None: null
  };
  !function (e) {
    Object.keys(e).forEach(function (t) {
      return e[e[t]] = t;
    });
  }(u);
  var o = new CustomEvent("konamiCode"),
    r = [u.Up, u.Up, u.Down, u.Down, u.Left, u.Right, u.Left, u.Right, u.B, u.A],
    s = [u.None, u.None, u.None, u.None, u.None, u.None, u.None, u.None, u.None, u.None],
    i = function i() {
      for (var e = !0, t = 0; t < r.length; t++) if (r[t] !== s[t]) {
        e = !1;
        break;
      }
      return e;
    },
    c = function c(e) {
      s.shift(), s.push(e);
      var t = new CustomEvent("konamiCodeGesture", {
        detail: {
          code: e,
          name: u[e]
        }
      });
      document.dispatchEvent(t), i() && document.dispatchEvent(o);
    };
  t.Gestures = u, t.addToQueue = c;
}, function (e, t, n) {
  "use strict";

  n(2);
}, function (e, t, n) {
  "use strict";

  n(0), n(3), n(4);
}, function (e, t, n) {
  "use strict";

  var u = n(0),
    o = !1,
    r = null,
    s = null,
    i = null,
    c = null,
    a = Math.max(document.documentElement.clientWidth, window.innerWidth || 0),
    d = function d(e) {
      o = !1, i = e.touches[0].clientX, c = e.touches[0].clientY;
    },
    f = function f(e) {
      i && c && (o = !0, r = e.touches[0].clientX, s = e.touches[0].clientY);
    },
    l = function l(e) {
      if (o) {
        var t = i - r,
          n = c - s;
        Math.abs(t) > Math.abs(n) ? (0, u.addToQueue)(t > 0 ? u.Gestures.Left : u.Gestures.Right) : (0, u.addToQueue)(n > 0 ? u.Gestures.Up : u.Gestures.Down), o = !1;
      } else {
        var d = i < a / 2;
        (0, u.addToQueue)(d ? u.Gestures.A : u.Gestures.B);
      }
      i = null, c = null;
    };
  document.addEventListener("touchstart", d, !1), document.addEventListener("touchmove", f, !1), document.addEventListener("touchend", l, !1);
}, function (e, t, n) {
  "use strict";

  var u = n(0),
    o = {
      ArrowLeft: u.Gestures.Left,
      ArrowRight: u.Gestures.Right,
      ArrowUp: u.Gestures.Up,
      ArrowDown: u.Gestures.Down,
      a: u.Gestures.A,
      b: u.Gestures.B
    },
    r = function r(e) {
      var t = o[e.key] || u.Gestures.Invalid;
      (0, u.addToQueue)(t);
    };
  document.addEventListener("keyup", r);
}]);

/***/ }),

/***/ 927:
/***/ (() => {

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }
function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }
window.addEventListener("load", function (event) {
  function loadSchedule() {
    return _loadSchedule.apply(this, arguments);
  }
  function _loadSchedule() {
    _loadSchedule = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
      var agenda_url, response, agenda, skeleton, schedule;
      return _regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            agenda_url = "https://pretalx.com/python-brasil-2023/schedule/export/schedule.json";
            _context.next = 3;
            return fetch(agenda_url);
          case 3:
            response = _context.sent;
            _context.next = 6;
            return response.json();
          case 6:
            agenda = _context.sent;
            // Add Content Group tabs actions
            addElementOnclick();
            agenda.schedule.conference.days.forEach(function (day) {
              var programacao = document.createElement("div");
              programacao.classList.add("programacao-day");
              programacao.classList.add("hide");
              programacao.setAttribute("data-index-day", day.index);
              createRoomsHeader(day.date, day.rooms);
            });

            // Remove skeleton and add the schedule elements
            skeleton = document.querySelector(".event-skeleton");
            schedule = document.querySelector(".event-schedule");
            skeleton.classList.remove("active");
            schedule.classList.add("active");
          case 13:
          case "end":
            return _context.stop();
        }
      }, _callee);
    }));
    return _loadSchedule.apply(this, arguments);
  }
  loadSchedule();
});

// Handle events
function handleClickGroup(event) {
  var id = event.currentTarget.id;
  var tabButton = document.getElementById(id);
  tabButton.toggleAttribute("disabled");
  tabButton.classList.toggle("active");
  document.querySelectorAll(".content-group").forEach(function (element) {
    if (element.id !== id) {
      element.classList.remove("active");
      element.removeAttribute("disabled");
    }
  });
  var contentId = id + "_content";
  var content = document.getElementById(contentId);
  content.classList.toggle("active");
  document.querySelectorAll(".pretalx-content").forEach(function (element) {
    if (element.id !== contentId) {
      element.classList.remove("active");
    }
  });

  // Set talks to active
  var _iterator = _createForOfIteratorHelper(content.children),
    _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var child = _step.value;
      if (child.firstElementChild.classList.contains("pretalx-dias")) {
        child.firstElementChild.firstElementChild.click();
      }
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
}
function handleClickDays(event) {
  if (event.currentTarget.classList.contains("active")) {
    return;
  }
  var id = event.currentTarget.id;
  var eventDate = event.currentTarget.getAttribute("data-date");
  var eventDay = event.currentTarget.getAttribute("data-index-day");
  var contentType = EventDates[eventDate];
  var tabButton = document.getElementById(id);

  // Set the content visibility
  var elementId = "".concat(contentType, "_room_").concat(eventDay);
  var contentElement = document.getElementById(elementId);
  contentElement.classList.toggle("active");
  document.querySelectorAll(".programacao-dia").forEach(function (element) {
    if (element.id !== elementId) {
      element.classList.remove("active");
    }
  });

  // Set room visibility
  document.querySelectorAll(".pretalx-rooms").forEach(function (element) {
    if (element.getAttribute("data-date") == eventDay) {
      element.classList.toggle("active");
    }
    if (element.getAttribute("data-date") !== eventDay) {
      element.classList.remove("active");
    }
  });

  // Change the visibility of the tab button
  tabButton.classList.toggle("active");
  document.querySelectorAll(".pretalx-day").forEach(function (element) {
    if (element.id !== id) {
      element.classList.remove("active");
    }
  });
}
function handleClickRoom(event) {
  var id = event.currentTarget.id;
  if (event.currentTarget.classList.contains("active")) {
    event.currentTarget.classList.remove("active");
    document.querySelectorAll(".programacao-talk").forEach(function (element) {
      if (element.getAttribute("data-room") !== id) {
        element.classList.toggle("active");
      }
    });
    return;
  }
  event.currentTarget.classList.toggle("active");
  // Change the visibility of the tab button
  document.querySelectorAll(".pretalx-room").forEach(function (element) {
    if (element.id !== id) {
      element.classList.remove("active");
    }
  });

  // Change the visibility of the content
  document.querySelectorAll(".programacao-talk").forEach(function (element) {
    if (element.getAttribute("data-room") == id && !element.classList.contains("active")) {
      element.classList.toggle("active");
    }
    if (element.getAttribute("data-room") !== id) {
      element.classList.remove("active");
    }
  });
}

// App functions
function createRoomsHeader(date, rooms) {
  var contentType = EventDates[date];
  var contentHeaderElement = document.getElementById(contentType + "_header");
  var roomListElement = document.getElementById(contentType + "_rooms");
  var scheduleElement = document.getElementById(contentType + "_programacao");
  var formattedDate = date.replaceAll("-", "");
  var newRoomListElement = roomListElement.cloneNode(true);
  newRoomListElement.setAttribute("data-date", formattedDate);
  var newDayElement = Object.assign(document.createElement("div"), {
    id: "".concat(contentType, "_room_").concat(formattedDate),
    className: "programacao-dia"
  });
  Object.keys(rooms).forEach(function (room, index) {
    var newListItemElement = roomListElement.firstElementChild.cloneNode(true);
    newListItemElement.setAttribute("data-index-room", index);
    newListItemElement.setAttribute("data-event-date", formattedDate);
    newListItemElement.id = "".concat(formattedDate, "_").concat(room.toUpperCase().replaceAll(" ", "_"));
    newListItemElement.classList.remove("hidden");
    newListItemElement.insertAdjacentHTML("beforeend", room.toUpperCase());
    newListItemElement.onclick = handleClickRoom;
    newRoomListElement.appendChild(newListItemElement);

    // Create the talks list element
    createScheduleDay(date, rooms[room]).forEach(function (element) {
      newDayElement.appendChild(element);
    });
  });

  // Create the day title element
  var dayTitleElement = "<h2>".concat(contentType[0].toUpperCase() + contentType.slice(1), " do dia ").concat(date.split("-").reverse().join("/"), "</h2>");
  newDayElement.insertAdjacentHTML("afterbegin", dayTitleElement);

  // For default, all room actions should be hidden
  if (formattedDate == getActiveDate()) {
    newRoomListElement.classList.add("active");
    newDayElement.classList.add("active");
  }

  // Remove the base cloned element
  newRoomListElement.firstElementChild.remove();

  // Add the room list and schedule list to the document
  contentHeaderElement.appendChild(newRoomListElement);
  scheduleElement.appendChild(newDayElement);
}
function createScheduleDay(date, rooms) {
  return rooms.map(function (talk, index) {
    // Create a new talk element
    var newTalkElement = Object.assign(document.createElement("div"), {
      id: talk.id,
      className: "programacao-talk"
    });
    newTalkElement.setAttribute("data-room", "".concat(date.replaceAll("-", ""), "_").concat(talk.room.toUpperCase().replaceAll(" ", "_")));

    // Create first column with the talk start
    var firstColumnElement = Object.assign(document.createElement("div"), {
      className: "talk-start " + talk.track.replaceAll(" ", "_")
    });

    // Create second column with the talk title
    var secondColumnElement = Object.assign(document.createElement("div"), {
      className: "talk-title"
    });

    // Add the talk start time to the first column
    var talk_start = "<h3>\n      ".concat(talk.start, "\n    </h3>\n    <span>\n      ").concat(formatTimeToBR(talk.duration), "\n    </span>");
    firstColumnElement.insertAdjacentHTML("beforeend", talk_start);

    // Create the talk title element
    var talk_title = "<h4 class=\"talk\">".concat(talk.title, "</h4>");

    // Create the talk level element
    var talk_level = "<div class=\"nivel-tipo\">\n      <span class=\"nivel ".concat(talk.track.replaceAll(" ", "_"), "\">").concat(talk.track, "</span>\n      <span class=\"tipo\">").concat(talk.type, "</span>\n      <span class=\"local\">").concat(talk.room.toUpperCase(), "</span>\n    </div>");

    // Create the View More element
    var view_more = "<a href=\"/".concat(parseTitle(talk.title), ".html\" class=\"btn talk-more\">Saiba mais</a>");

    // Add the elements to the second column
    secondColumnElement.insertAdjacentHTML("afterbegin", talk_title);
    secondColumnElement.appendChild(createSpeakerContainer(talk.persons));
    secondColumnElement.insertAdjacentHTML("beforeend", talk_level);
    secondColumnElement.insertAdjacentHTML("beforeend", view_more);
    // Add the columns to the talk element
    newTalkElement.appendChild(firstColumnElement);
    newTalkElement.appendChild(secondColumnElement);

    // For default, all talks should be hidden
    newTalkElement.classList.add("active");
    return newTalkElement;
  });
}

// Utils
function createSpeakerContainer(speakers) {
  var persons = [];
  var avatar = document.createElement("div");
  avatar.className = "avatar";
  speakers.forEach(function (person) {
    var image = "<figure>\n    <picture>\n      <source srcset=\"/images/palestrantes/".concat(person.code, "_thumb.webp\" width=\"32\" type=\"image/webp\"/>\n      <img src=\"/images/palestrantes/").concat(person.code, "_thumb.png\" width=\"32\" type=\"image/png\" loading=\"lazy\" alt=").concat(person.public_name, "/>\n    </picture>\n    </figure>");
    avatar.insertAdjacentHTML("beforeend", image);
    persons.push(person.public_name);
  });
  var speakers_element = document.createElement("div");
  speakers_element.className = "palestrantes";
  speakers_element.appendChild(avatar);
  speakers_element.insertAdjacentHTML("beforeend", "<p>".concat(persons.join(", "), "</p>"));
  return speakers_element;
}
function formatTimeToBR(time) {
  var time_array = time.split(":");
  var hours = Number(time_array[0]);
  var minutes = Number(time_array[1]);
  if (hours > 0) {
    if (minutes > 0) {
      return "".concat(hours, "h").concat(minutes, "min");
    }
    return "".concat(hours, "h");
  }
  return "".concat(minutes, "min");
}
function parseTitle(title) {
  return title.toLowerCase().replaceAll("- ", "").replaceAll(", ", "-").replaceAll(" ", "-").replaceAll("ç", "c").replaceAll("á", "a").replaceAll("ã", "a").replaceAll("é", "e").replaceAll("ê", "e").replaceAll("í", "i").replaceAll("ó", "o").replaceAll("õ", "o").replaceAll("ú", "u").replaceAll("ñ", "n").replaceAll("ü", "u").replaceAll(".", "-dot-").replaceAll("/", "-").replaceAll("!", "").replaceAll("?", "").replaceAll("(", "").replaceAll(")", "").replaceAll("[", "").replaceAll("]", "").replaceAll("{", "").replaceAll("}", "").replaceAll("=", "").replaceAll("+", "").replaceAll("*", "").replaceAll("&", "").replaceAll("#", "").replaceAll("$", "").replaceAll("%", "-por-cento-").replaceAll("'", "").replaceAll(":", "").replaceAll("--", "-").replaceAll("_", "-");
}
function addElementOnclick() {
  var tableHeader = document.querySelectorAll(".content-group");
  tableHeader.forEach(function (element) {
    element.onclick = handleClickGroup;
  });
  var daySelectors = document.querySelectorAll(".pretalx-day");
  daySelectors.forEach(function (element) {
    element.onclick = handleClickDays;
  });
}
function getActiveDate() {
  var element = document.querySelector(".pretalx-day.active");
  return element ? element.getAttribute("data-index-day") : null;
}

// Constants
var Track = {
  Beginner: "Iniciante",
  Intermediary: "Intermediário",
  Advanced: "Avançado",
  Non_technical: "Não-técnica"
};
var Type = {
  Talk: "Palestra",
  Short_tutorial: "Tutorial",
  Long_tutorial: "Tutorial"
};
var EventDates = {
  "2023-10-30": "tutoriais",
  "2023-10-31": "tutoriais",
  "2023-11-01": "tutoriais",
  "2023-11-02": "palestras",
  "2023-11-03": "palestras",
  "2023-11-04": "palestras",
  "2023-11-05": "sprint"
};

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be in strict mode.
(() => {
"use strict";
/* harmony import */ var _components_konami_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(476);
/* harmony import */ var _components_konami_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_components_konami_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _components_pretalx_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(927);
/* harmony import */ var _components_pretalx_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_components_pretalx_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _components_game_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(778);
/* harmony import */ var _components_game_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_components_game_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _components_header_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(748);
/* harmony import */ var _components_header_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_components_header_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _components_egg_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(925);
/* harmony import */ var _components_egg_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_components_egg_js__WEBPACK_IMPORTED_MODULE_4__);






})();

/******/ })()
;